// <auto-generated />
using LibraryApp1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace LibraryApp1.Migrations
{
    [DbContext(typeof(LibraryApp1Context))]
    [Migration("20190101135852_authorNacategoryDescript")]
    partial class authorNacategoryDescript
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LibraryApp1.Models.Authors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("authorName");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("LibraryApp1.Models.Books", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AuthorsId");

                    b.Property<int>("CategoriesId");

                    b.Property<string>("bookTitle");

                    b.Property<string>("image");

                    b.HasKey("ID");

                    b.HasIndex("AuthorsId");

                    b.HasIndex("CategoriesId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("LibraryApp1.Models.BooksLoan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BooksId");

                    b.Property<DateTime>("IssuedData");

                    b.Property<DateTime>("ReturnedDate");

                    b.Property<int>("UserId");

                    b.Property<int?>("UsersID");

                    b.HasKey("ID");

                    b.HasIndex("BooksId");

                    b.HasIndex("UsersID");

                    b.ToTable("BooksLoan");
                });

            modelBuilder.Entity("LibraryApp1.Models.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("categoryName");

                    b.Property<string>("description");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LibraryApp1.Models.Movies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Genre");

                    b.Property<decimal>("Price");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("LibraryApp1.Models.Users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("userAddress")
                        .IsRequired();

                    b.Property<string>("userEmail")
                        .IsRequired();

                    b.Property<string>("userName")
                        .IsRequired();

                    b.Property<string>("userPhone")
                        .IsRequired();

                    b.Property<string>("userSurname")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LibraryApp1.Models.Books", b =>
                {
                    b.HasOne("LibraryApp1.Models.Authors", "Authors")
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LibraryApp1.Models.Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LibraryApp1.Models.BooksLoan", b =>
                {
                    b.HasOne("LibraryApp1.Models.Books", "Books")
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LibraryApp1.Models.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersID");
                });
#pragma warning restore 612, 618
        }
    }
}
